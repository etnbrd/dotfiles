#!/usr/bin/env bash
# bootstrap installs things.

cd "$(dirname "$0")/.."
DOTFILES=$(pwd)

set -e

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

source $DOTFILES/functions/prompts
source $DOTFILES/functions/topics

link_file () {
  local src=$1 dst=$2

  local overwrite= backup= skip=
  local action=

  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]
  then

    if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
    then

      local currentSrc="$(readlink $dst)"

      if [ "$currentSrc" == "$src" ]
      then

        skip=true;

      else

        p_user "File already exists: $dst ($(basename "$src")), what do you want to do?\n\
        [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
        read -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac

      fi

    fi

    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}
    skip=${skip:-$skip_all}

    if [ "$overwrite" == "true" ]
    then
      rm -rf "$dst"
      p_success "removed $dst"
    fi

    if [ "$backup" == "true" ]
    then
      mv "$dst" "${dst}.backup"
      p_success "moved $dst to ${dst}.backup"
    fi

    if [ "$skip" == "true" ]
    then
      p_success "skipped $src"
    fi
  fi

  if [ "$skip" != "true" ]  # "false" or empty
  then
    ln -s "$1" "$2"
    p_success "linked $1 to $2"
  fi
}

install_dotfiles () {
  p_info 'installing dotfiles \n'

  local overwrite_all=false backup_all=false skip_all=false

  # Get the list of topic, filtered by tags
  dotfiles_topics $TAGS

  # Find all the symlink files within each topic folder
  # and link each file into the home folder
  for src in $(find -H "${filtered_folders[@]}" -maxdepth 1 -name '*.symlink')
  do
    dst="$HOME/.$(basename "${src%.*}")"
    link_file "$src" "$dst"
    # p_user $src' -> '$dst'\n'
  done

  unset filtered_folders
}

install_dotfiles